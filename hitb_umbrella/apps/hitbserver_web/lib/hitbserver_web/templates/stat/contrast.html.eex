<div id="app">
  <div class="ui padded grid"  id="div">
  <div class="two wide column" style="overflow-y:auto;overflow-x:hidden;height:795px;">
    <div class="ui secondary vertical menu">
      <div class="item" v-for="x in leftList" v-on:click="addContrast('<%=@type%>',x,'<%=@time%>','<%=@drg%>')">{{x}}<a class="ui label"><i class="plus icon"></i></a></div>
    </div>
  </div>
  <div class="fourteen wide column">
    <div class="ui big breadcrumb" style="background:#ffffff;">
      <a class="section" href="/hospitals">主页</a>
      <i class="right chevron icon divider"></i>
      <a class="section":href="'/hospitals/stat_html?'+url">基础分析</a>
      <i class="right chevron icon divider"></i>
      <div class="active section">对比</div>
    </div>
    <div class="ui divider"></div>
    <div id="div_in">
      <div class="ui menu" id="div_menu">
        <div class="item">
          <div class="ui mini primary  button" onclick="change('org')">机构</div>
          &nbsp;&nbsp;
          <div class="ui mini primary  button" onclick="change('department')">科室</div>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <div class="ui mini orange  button" onclick="change('year_time')">年度</div>
          &nbsp;&nbsp;
          <div class="ui mini orange  button" onclick="change('half_year')">半年</div>
          &nbsp;&nbsp;
          <div class="ui mini orange  button" onclick="change('season_time')">季度</div>
          &nbsp;&nbsp;
          <div class="ui mini orange  button" onclick="change('month_time')">月度</div>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <div class="ui mini teal  button" onclick="change('mdc')">MDC</div>
          &nbsp;&nbsp;
          <div class="ui mini teal  button" onclick="change('adrg')">ADRG</div>
          &nbsp;&nbsp;
          <div class="ui mini teal  button" onclick="change('drg')">DRG</div>
        </div>
      </div>
    <div class="ui grid">
        <div class="six wide column" style="height:600px;">
          <div id="charts" style="height:100%;"></div>
        </div>
        <div class="ten wide column" id="fatherchart">
          <div id="charts2" style="height:100%;"></div>
        </div>
        <div class="sixteen wide column">
          <br/><br/>
          <div class="ui card" style="width:100%;">
            <div class="content" style="background:#F5F5F5">
              <div class="header">建议</div>
            </div>
            <div class="content"style="overflow-y:auto;height:100px;width:100%">
              <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;无。</p>
            </div>
          </div>
        </div>
        <div class="sixteen wide column">
            <table class="ui single line celled table">
              <thead>
                <tr class="center aligned">
                  <th v-for="(a, index) in headerCn">{{ a }}</th>
                </tr>
              </thead>
              <tbody>
                <tr v-for="(xs, i) in stat" class="center aligned">
                  <td v-for="(x, index) in xs"> {{ x }} </td>
                </tr>
              </tbody>
            </table>
        </div>
        <div class="fourteen wide column">
        </div>
    </div>

  </div>
</div>
<script src="<%= static_path(@conn, "/css/echarts/echarts.min.js") %>"></script>
<script src="<%= static_path(@conn, "/css/echarts/ecStat.js") %>"></script>
<script>
$(document).ready(function() {
  Vue.prototype.$ajax = $.ajax;
  common = new Vue({
    el: '#app',
    data: {
      stat: [],
      statX: [],
      statInfo: '',
      headerCn: [],
      headerEn: [],
      leftList: [],
      pages: [],
      page: 1,
      order: 0,
      order_type: 'asc',
      clickedY: [],
      clickedX: [],
      url: ''
    },
    created: function () {
      this.getList();
      this.getContrast();
      this.chartRadar('charts');
      this.chartBar('charts2');
    },
    methods: {
      getList: function() {
        this.$ajax({
          type: 'GET',
          url: `/stat/contrast_list?username=${'<%=@user.username%>'}`,
          dataType: 'json',
          success: (res)=> {
            this.leftList = res.list;
          }
        });
      },
      getContrast: function() {
        this.$ajax({
          type: 'GET',
          url: `/stat/contrast?username=${'<%=@user.username%>'}`,
          dataType: 'json',
          success: (res)=> {
            this.stat = res.stat;
            this.headerCn = this.stat[0];
            this.stat.splice(0, 1);
            this.url = res.url;
          }
        });
      },
      addContrast: function(type, org, time, drg) {
        url = 'type='+type+'&tool_type=@tool_type&org='+org+'&time='+time+'&drg='+drg;
        this.$ajax({
          type: 'POST',
          url: `/stat/com_add/`,
          data: {url: [type, org, time, drg, ''], username: '<%=@user.username%>'},
          dataType: 'json',
          success: (res)=> {
            if(res['result']){
              window.location.reload()
            }
          }
        });
      },
      chartRadar: function(id) {
        this.$ajax({
          type: 'GET',
          url: `/stat/contrast_chart?chart_type=radar&username=${'<%=@user.username%>'}`,
          dataType: 'json',
          success: (res)=> {
            option = {
                title: {text: ''},
                tooltip: {trigger: 'axis', axisPointer:{ type: 'cross' }},
                legend: {data: res.chart_key, type: 'scroll', width: '80%'},
                radar: {name: {formatter:'{value}', textStyle: {color:'#000000'}, textStyle: {color: '#fff', backgroundColor: '#999', borderRadius: 3, padding: [1, 5]}}, indicator: res.indicator},
                series: [{name: '对比', type: 'radar', data : res.data}]
            };
            setOption(id, option)
          }
        });
      },
      chartBar: function(id) {
        this.$ajax({
          type: 'GET',
          url: `/stat/contrast_chart?chart_type=bar&username=${'<%=@user.username%>'}`,
          dataType: 'json',
          success: (res)=> {
            option = {tooltip : {trigger: 'axis'},
                legend: {data: res.chart_key, type: 'scroll', width: '60%' },
                toolbox: {show: true, feature:{magicType: {type: ['bar','line','stack','tiled']}, saveAsImage: {}}},
                calculable : true,
                xAxis : [res.xAxis],
                yAxis : [{type : 'value'}],
                series : res.series};
            setOption(id, option)
          }
        });
      },
    }
  })
});
function setOption(id, option) {
  myChart = echarts.init(document.getElementById(id));
  myChart.setOption(option);
}
// scatter = [];
// col = "-1"
// function pie(value) {
//   if (["org","time","drg2"].indexOf(value) == -1) {
//     if (scatter.indexOf(value) != -1) {
//       scatter.splice(scatter.indexOf(value),1);
//     } else {
//       scatter.push(value)
//     }
//     if (scatter.length > 2) {
//       scatter.splice(0,1);
//     }
//     $('#stattable').children().children().css("background","");
//     scatter.forEach ((n) => {
//       $('.'+ n).css("background","#e0e0e0");
//     })
//     type = 'bar'
//     col = '';
//     if (scatter.length  == 0) {
//       type = 'bar'
//       col = '';
//       $('#fatherchart').children().remove();
//       $('#fatherchart').append("<div id = 'charts2' style ='height: 100%'></div>")
//       var myChart2 = echarts.init(document.getElementById('charts2'));
//     } else if (scatter.length  == 1) {
//       type = 'pie'
//       col = scatter[0];
//       $('#fatherchart').children().remove();
//       $('#fatherchart').append("<div id = 'charts3' style ='height: 100%'></div>")
//       var myChart3 = echarts.init(document.getElementById('charts3'));
//     } else if (scatter.length  == 2) {
//       type = 'scatter'
//       col = scatter[0] +'-'+scatter[1];
//       $('#fatherchart').children().remove();
//       $('#fatherchart').append("<div id = 'charts4' style ='height: 100%'></div>")
//       var myChart4 = echarts.init(document.getElementById('charts4'));
//     }
//     data_name = [];
//     series = [];
//     data4 = [];
//     data4_name = '';
//     data4_x = 0;
//     data4_y = 0;
//     $.ajax({
//       type: "get",
//       url: '/hospitals/com_chart?chart_type='+type+'&chart_key=' + col,
//       async: false,
//       success: function(data){
//         if (type == 'pie') {
//           data_name = data.data;
//           series = data.series;
//         } else if (type == 'scatter'){
//           data4 = data.data;
//           data4_name = data.xkey;
//           data4_x = data.xSeries;
//           data4_y = data.ySeries;
//         }
//       },
//       dataType: 'json'
//     });
//     option3 = {
//       tooltip : {
//           trigger: 'item',
//           formatter: "{a} <br/>{b} : {c} ({d}%)"
//       },
//       legend: {
//           orient: 'vertical',
//           left: 'left',
//           data: data_name
//       },
//       series : [
//           {
//               name: '访问来源',
//               type: 'pie',
//               radius : '55%',
//               center: ['50%', '60%'],
//               data: series,
//               itemStyle: {
//                   emphasis: {
//                       shadowBlur: 10,
//                       shadowOffsetX: 0,
//                       shadowColor: 'rgba(0, 0, 0, 0.5)'
//                   }
//               }
//           }
//       ]
//     };
//     // See https://github.com/ecomfe/echarts-stat
//     var myRegression = ecStat.regression('polynomial', data4, 3)
//     myRegression.points.sort(function(a, b) {
//         return a[0] - b[0];
//     });
//     option4 = {
//         tooltip: {
//             trigger: 'axis',
//             axisPointer: {
//                 type: 'cross'
//             }
//         },
//         xAxis: {
//             type: 'value',
//             min: data4_x,
//             splitLine: {
//                 lineStyle: {
//                     type: 'dashed'
//                 }
//             },
//             splitNumber: 20
//         },
//         yAxis: {
//             type: 'value',
//             min: data4_y-100,
//             splitLine: {
//                 lineStyle: {
//                     type: 'dashed'
//                 }
//             }
//         },
//         grid: {
//             top: 90
//         },
//         series: [{
//             name: data4_name,
//             type: 'scatter',
//             label: {
//                 emphasis: {
//                     show: true,
//                     position: 'right',
//                     textStyle: {
//                         color: 'blue',
//                         fontSize: 16
//                     }
//                 }
//             },
//             data: data4
//         }, {
//             name: '曲线值',
//             type: 'line',
//             smooth: true,
//             showSymbol: false,
//             data: myRegression.points,
//             markPoint: {
//                 itemStyle: {
//                     normal: {
//                         color: 'transparent'
//                     }
//                 },
//                 label: {
//                     normal: {
//                         show: true,
//                         position: 'left',
//                         formatter: myRegression.expression,
//                         textStyle: {
//                             color: '#333',
//                             fontSize: 14
//                         }
//                     }
//                 },
//                 data: [{
//                     coord: myRegression.points[myRegression.points.length - 1]
//                 }]
//             }
//         }]
//     };
//     if (scatter.length  == 0) {
//       myChart2.setOption(option2);
//     } else if (scatter.length  == 1) {
//       myChart3.setOption(option3);
//     } else if (scatter.length  == 2) {
//       myChart4.setOption(option4);
//     }
//   }
// }
</script>
