<div id="app">
  <div class="ui padded grid"  id="div">
    <div class="two wide column" style="overflow-y:auto;overflow-x:hidden;height:795px;">
      <div class="ui secondary vertical menu">
        <a class="item" v-for="x in leftList">{{x}}<a class="ui label"></a>
      </div>
    </div>
    <div class="fourteen wide column">
      <div class="ui big breadcrumb" style="background:#ffffff;">
        <a class="section" href="/hospitals">主页</a>
        <i class="right chevron icon divider"></i>
        <a class="section" href="/hospitals/stat_html">基础分析</a>
        <i class="right chevron icon divider"></i>
        <div class="active section">分析详情</div>
      </div>
      <div class="ui divider"></div>
        <div class="ui menu" id="div_menu">
          <div class="item">
            <div class="ui mini primary  button" onclick="change('org')">机构</div>
            &nbsp;&nbsp;
            <div class="ui mini primary  button" onclick="change('department')">科室</div>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <div class="ui mini orange  button" onclick="change('year_time')">年度</div>
            &nbsp;&nbsp;
            <div class="ui mini orange  button" onclick="change('half_year')">半年</div>
            &nbsp;&nbsp;
            <div class="ui mini orange  button" onclick="change('season_time')">季度</div>
            &nbsp;&nbsp;
            <div class="ui mini orange  button" onclick="change('month_time')">月度</div>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <div class="ui mini teal  button" onclick="change('mdc')">MDC</div>
            &nbsp;&nbsp;
            <div class="ui mini teal  button" onclick="change('adrg')">ADRG</div>
            &nbsp;&nbsp;
            <div class="ui mini teal  button" onclick="change('drg')">DRG</div>
          </div>
        </div>
      <div class="ui grid">
        <div class="six wide column" style="height:600px;">
          <div id="charts" style="height:100%;"></div>
        </div>
        <div class="ten wide column" id ="fatherchart">
          <div id="charts2" style="height:100%;"></div>
        </div>
        <div class="sixteen wide column">
          <br/><br/>
          <div class="ui card" style="width:100%;">
            <div class="content" style="background:#F5F5F5">
              <div class="header">建议</div>
            </div>
            <div class="content" style="overflow-y:auto;height:100px;width:100%" id = "suggest">{{suggest}}</div>
          </div>
        </div>
        <div class="fourteen wide column">
        </div>
      </div>
        <div class="ui grid">
          <div class="sixteen wide column">
              <table class="ui single line celled table">
                <thead>
                  <tr class="center aligned">
                    <th v-for="(a, index) in headerCn">{{ a }}</th>
                  </tr>
                </thead>
                <tbody>
                  <tr v-for="(xs, i) in stat" class="center aligned">
                    <td v-for="(x, index) in xs"> {{ x }} </td>
                  </tr>
                </tbody>
              </table>
          </div>
          <div class="fourteen wide column">
          </div>
        </div>
</div>
<script src="<%= static_path(@conn, "/css/echarts/echarts.min.js") %>"></script>
<script type="text/javascript">
$(document).ready(function() {
  Vue.prototype.$ajax = $.ajax;
  common = new Vue({
    el: '#app',
    data: {
      stat: [],
      headerCn: [],
      leftList: [],
      suggest: ''
    },
    created: function () {
      this.getList();
      this.getStatInfo();
      this.chartRadar('charts');
      this.chartBar('charts2');
    },
    methods: {
      getList: function() {
        this.$ajax({
          type: 'GET',
          url: `/stat/contrast_list?username=${'<%=@user.username%>'}`,
          dataType: 'json',
          success: (res)=> {
            this.leftList = res.list;
          }
        });
      },
      getStatInfo: function() {
        this.$ajax({
          type: 'GET',
          url: `/stat/stat_info?username=${'<%=@user.username%>'}`,
          dataType: 'json',
          success: (res)=> {
            this.stat = res.stat;
            this.headerCn = this.stat[0];
            this.stat.splice(0, 1);
            this.suggest = res.suggest.join(' ; ');
          }
        });
      },
      addContrast: function(org) {
        const time = this.stat[this.stat.length - 1][1]
        this.$ajax({
          type: 'POST',
          url: `/stat/stat_add/`,
          data: {url: ['<%=@page_num%>', '<%=@type%>', '<%=@tool_type%>', org, time, '<%=@drg%>', '<%=@order%>', '<%=@order_type%>', '<%=@page_type%>'], username: '<%=@user.username%>'},
          dataType: 'json',
          success: (res)=> {
            if(res['result']){
              window.location.reload()
            }
          }
        });
      },
      chartRadar: function(id) {
        this.$ajax({
          type: 'GET',
          url: `/stat/stat_info_chart?chart_type=radar&id=<%=@id%>&username=${'<%=@user.username%>'}`,
          dataType: 'json',
          success: (res)=> {
            option = {
                title: {text: ''},
                tooltip: {trigger: 'axis', axisPointer:{ type: 'cross' }},
                legend: {data: res.chart_key, type: 'scroll', width: '80%'},
                radar: {name: {formatter:'{value}', textStyle: {color:'#000000'}, textStyle: {color: '#fff', backgroundColor: '#999', borderRadius: 3, padding: [1, 5]}}, indicator: res.indicator},
                series: [{name: '对比', type: 'radar', data : res.data}]
            };
            setOption(id, option)
          }
        });
      },
      chartBar: function(id) {
        this.$ajax({
          type: 'GET',
          url: `/stat/stat_info_chart?chart_type=bar&id=<%=@id%>&username=${'<%=@user.username%>'}`,
          dataType: 'json',
          success: (res)=> {
            option = {tooltip : {trigger: 'axis'},
                legend: {data: res.chart_key, type: 'scroll', width: '60%' },
                toolbox: {show: true, feature:{magicType: {type: ['bar','line','stack','tiled']}, saveAsImage: {}}},
                calculable : true,
                xAxis : [res.xAxis],
                yAxis : [{type : 'value'}],
                series : res.series};
            setOption(id, option)
          }
        });
      },
    }
  })
});
function setOption(id, option) {
  myChart = echarts.init(document.getElementById(id));
  myChart.setOption(option);
}
</script>
