<div id="department_set">
  <div class="ui huge breadcrumb" style="background:#ffffff;">
    <a class="section" href="/hospitals">主页</a>
    <i class="right chevron icon divider"></i>
    <div class="active section">科室管理</div>
  </div>
  <div class="ui divider"></div>
  <div class="ui menu" id="div_menu">
    <div class="item">
      <button class="ui primary labeled icon button" v-on:click = "add_button()" ><i class="add icon"></i>新建</button>
    </div>
    <div class="item">
      <button class="ui labeled icon button" v-on:click = "edit()" id="edit" v-bind:class="{'ui disabled labeled icon button': tableTr === null}"><i class="edit icon"></i>编辑</button>
    </div>
    <div class="item" id="ban_div">
      <button class="ui orange labeled icon button" v-on:click = "ban()" id="ban" v-bind:class="{'ui disabled labeled icon button': tableTr === null}" v-if="tableban === false"><i class="ban icon"></i>停用</button>
      <button v-else  class="ui orange labeled icon button" v-on:click = "refresh()" id="refresh" v-bind:class="{'ui disabled labeled icon button': tableTr === null}"><i class="refresh icon"></i>重新启用</button>
    </div>
    <div class="item">
      <button class="ui red labeled icon button" v-on:click = "remove()" id="remove" v-bind:class="{'ui disabled labeled icon button': tableTr === null}"><i class="remove icon"></i>删除</button>
    </div>
  </div>

  <div class="ui success message" id = "mes" style="display:none;">
    <div class="header" id = "mes_header">你的科室创建成功!</div>
    <p>2秒后页面将自动刷新。</p>
  </div>
    <table class="ui celled table">
      <thead>
        <tr class="center aligned">
          <th>序号</th>
          <th>内部科室编码</th>
          <th>内部科室名称</th>
          <th>所属机构</th>
          <th>所属专科</th>
          <th>所属科室</th>
          <th>科室主任</th>
          <th>科室副主任</th>
          <th>特色科室</th>
          <th>重点科室</th>
        </tr>
      </thead>
      <tbody id="tbody">
        <tr v-for="(item, index) in departmentList" v-bind:key="index" :id = "item.id" v-on:click="myclick(item.id, item.is_ban)" v-bind:class="{'ban active center aligned': tableTr === item.id && item.is_ban, 'active center aligned': tableTr === item.id, 'ban center aligned': item.is_ban, 'center aligned': true}">
          <td>{{item.id}}</td>
          <td>{{item.wt_code}}</td>
          <td>{{item.wt_name}}</td>
          <td>{{item.org}}</td>
          <td>{{item.class}}</td>
          <td>{{item.department}}</td>
          <td>{{item.cherf_department}}</td>
          <td>{{item.professor}}</td>
          <td>{{item.is_spe}}</td>
          <td>{{item.is_imp}}</td>
        </tr>
      </tbody>
    </table>
  <div class="ui right floated pagination menu" id = "page">
    <a v-for="(item, index) in pageList" class="item" v-bind:key="index" v-bind:href = "generateUrl(item.page)" title = "item.page" v-bind:class="{'disabled': parseInt(item.num, 10) === page}" >{{item.num}}</a>
  </div>
</div>
<script>
  $(document).ready(function() {
    Vue.prototype.$ajax = $.ajax;
    common = new Vue({
      el: '#department_set',
      data: {
        departmentList: [],
        pageList: [],
        page: 1,
        tableTr: null,
        tableban: false,
      },
      created: function () {
        this.department_list()
      },
      methods: {
        department_list: function () {
          $.ajax({
            type: "get",
            url: '/servers/customize_department?page=<%=@page%>',
            async: false,
            success: (data) => {
              this.departmentList = data.data
              this.pageList = data.page_list
              this.pagenum = data.page_num
            },
            dataType: 'json'
          });
        },
        myclick: function (value, bol) {
          this.tableban = bol
          if (this.tableTr === value) {
            this.tableTr = null
          } else {
            this.tableTr = value
          }
        },
        //新建
        add_button: function(){
          window.location.href= '/hospitals/add?type=department';
        },
        //编辑
        edit: function(){
          window.location.href= '/hospitals/server_edit?type=department&id='+this.tableTr;
        },
        //停用
        ban: function(){
          $.ajax({
            type: "PUT",
            url: '/servers/customize_department/'+this.tableTr,
            async: false,
            data: {customize_department: {is_ban: true}},
            success: function(data) {
              $("#mes_header").html('你的科室停用成功!');
              $("#mes").css('display','block');
              setTimeout("reload()",2000);
            },
            dataType: 'json'
          });
        },
        // 重新启用
        refresh: function () {
          $.ajax({
            type: "PUT",
            url: '/servers/customize_department/'+this.tableTr,
            async: false,
            data: {customize_department: {is_ban: false}},
            success: function(data) {
              $("#mes_header").html('你的科室启用成功!');
              $("#mes").css('display','block');
              setTimeout("reload()",2000);
            },
            dataType: 'json'
          });
        },
        //删除
        remove: function(){
          $.ajax({
            type: "delete",
            url: '/servers/customize_department/'+this.tableTr,
            async: false,
            success: function(data) {
              $("#mes_header").html('你的科室删除成功!');
              $("#mes").css('display','block');
              setTimeout("reload()",2000);
            },
            dataType: 'json'
          });
        },
        generateUrl: function(num) {
          let url = '';
          if(this.page === parseInt(num)) {
            url = '###'
          } else {
            url = `/hospitals/department_set?page=${num}`
          }
          return url
        },
      }
    })
  })
  function reload(){
    location.reload();
  }
</script>
<style>
.ban.active.center.aligne{
  color: #708090
}
.ban.center.aligned{
  color: #708090
}
</style>
