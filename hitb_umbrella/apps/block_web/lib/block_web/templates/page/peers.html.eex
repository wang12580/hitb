<div class="container" id="peer">
  <form @submit.prevent="" class="account_table" style="margin-bottom: 2rem">
    <div class="row">
      <div class="col">
        <label class="text-center  w-25">IP地址：</label><input type="text" class="form-control float-right w-75" placeholder="IP" v-model="host">
      </div>
      <div class="col">
        <label class="text-center  w-25">端口：</label><input type="text" class="form-control float-right w-75" placeholder="端口"  v-model="port">
      </div>
      <div class="col">
        <input type="submit" class="form-control" v-on:click="addPeer">
      </div>
    </div>
  </form>
  <table class="table table-striped account_table">
      <thead><tr>
        <th>地址</th><th>端口</th><th>链接状况</th>
      </tr></thead>
      <tr v-for="(item, index) in items" v-bind:key='index'>
        <td> {{ item.host }} </td><td> {{ item.port }} </td><td v-if="item.connect === true">链接成功</td><td v-if="item.connect === false">链接失败</td>
      </tr>
    </table>
</div>
<script>
$(document).ready(function() {
    // 将jquery的ajax加入到Vue对象中,vue对象里的this.$ajax就相当于是jquery的$.ajax
  Vue.prototype.$ajax = $.ajax;
  const BASE_URL = '/block/api';
  // 整个页面就是一个Vue对象,将所有属性都放到data里,将所有function都放到methods里
  const common = new Vue({
    el: '#peer',
    data: {
      type : '',
      items: [],
      log: '',
      host: '',
      port: ''
    },
    created: function () {
      this.getPeers()
    },
    methods: {
      getPeers: function() {
        this.type = 'getPeers'
        this.$ajax({
          type: 'GET',
          url: BASE_URL + '/peers',
          dataType: 'json',
          success: (res)=> {
            console.log(res)
            this.items = res.peers
          }
        });
      },
      addPeer: function(){
        // this.type = 'addPeer'
        this.$ajax({
          type: 'POST',
          url: BASE_URL + `/peer`,
          data: {peer_data: {"host": this.host, "port": parseInt(this.port, 10)}},
          dataType: 'json',
          success: (res)=> {
            this.items = res.result
            this.log = '链接节点成功'
            location.reload()
          },
          error: (err)=> {
            this.log = '连接节点失败'
            console.log( this.log);
          }
        });
      }
    }
  })
})
</script>
