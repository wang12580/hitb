<%= if(@page == "all")do %>
  <div class="container">
    <div class="modal fade bd-example-modal-lg" id="accountInfo" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">详细信息</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <table v-if="accoutnInfo === 'id'" class="table">
              <tr v-for="(data, key) in getTransactionById" v-bind:key='key' class="server-load-rightpanel-tr">
                <td v-if="key === 'type'">交易类型</td>
                <td v-if="key === 'timestamp'">时间戳</td>
                <td v-if="key === 'senderPublicKey'">二级秘钥</td>
                <td v-if="key === 'requesterPublicKey'">接受者</td>
                <td v-if="key === 'message'">备注</td>
                <td v-if="key === 'id'">交易ID</td>
                <td v-if="key === 'height'">区块高度</td>
                <td v-if="key === 'fee'">费用</td>
                <td v-if="key === 'datetime'">交易时间</td>
                <td v-if="key === 'blockId'">区块ID</td>
                <td v-if="key === 'amount'">金额</td>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<td>{{data}}</td>
              </tr>
            </table>
            <table v-if="accoutnInfo === 'PublicKey'" class="table">
              <tr v-for="(data, key) in getAccountByPublicKey" v-bind:key='key' class="server-load-rightpanel-tr">
                <td v-if="key === 'vote'">投票</td>
                <td v-if="key === 'publicKey'">公钥</td>
                <td v-if="key === 'balance'">余额</td>
                <td v-if="key === 'address'">地址</td>
                <td>{{data}}</td>
              </tr>
            </table>
            <table v-if="accoutnInfo === 'RecipientId'" class="table">
              <tr v-for="(data, key) in getAccountByAddress" v-bind:key='key' class="server-load-rightpanel-tr">
                <td v-if="key === 'vote'">投票</td>
                <td v-if="key === 'publicKey'">公钥</td>
                <td v-if="key === 'balance'">余额</td>
                <td v-if="key === 'address'">地址</td>
                <td>{{data}}</td>
              </tr>
            </table>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-sm">
        <div class="box_info border border-primary">
          <h3>余额</h3>
          <%= @user.balance %>
        </div>
      </div>
      <div class="col-sm">
        <div class="box_info border border-success">
          <h3>最后区块高度</h3>
          <%= @user.lockHeight%>
        </div>
      </div>
      <div class="col-sm">
        <div class="box_info border border-warning">
          <h3>版本信息</h3>
          <%= @user.version.build%>&nbsp;&nbsp;&nbsp;&nbsp;<%= @user.version.version%>
        </div>
      </div>
    </div>
  </div>
  <div class="row account_hr">
    <h3>我的交易</h3>
    <hr class="my-4">
  </div>
  <div class="row">
    <table class="table table-bordered account_table">
      <thead>
        <tr>
          <th scope="col">ID</th>
          <th scope="col">类型</th>
          <th scope="col">发送者</th>
          <th scope="col">接受者</th>
          <th scope="col">日期</th>
          <th scope="col">金额(费用)</th>
          <th scope="col">备用</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="(value, index) in transactions" v-bind:key ='index'>
          <th scope="row" data-toggle="modal" data-target="#accountInfo">
            <a href ="#" v-on:click="accountID(value.id)">{{value.id}}</a>
          </th>
          <td>{{value.type}}</td>
          <td data-toggle="modal" data-target="#accountInfo">
            <a href ="#" v-on:click="accountSenderPublicKey(value.senderPublicKey)">{{value.senderPublicKey}}</a>
          </td>
          <td data-toggle="modal" data-target="#accountInfo">
            <a href="#" v-on:click="accountRecipientId(value.recipientId)">{{value.recipientId}}</a>
          </td>
          <td>{{value.datetime}}</td>
          <td>{{value.amount}}({{value.fee}})</td>
          <td>{{value.message}}</td>
        </tr>
      </tbody>
    </table>
  </div>
<%end%>
<%= if(@page == "one")do %>
  <div class="container cards">
    <div class="row">
      <div class="col-md-12">
        <ul class="nav nav-tabs nav-fill">
          <li class="nav-item">
            <a class="nav-link" v-bind:class="{'active':accountPage == '账户信息'}" v-on:click="info('账户信息')">账户信息</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" v-bind:class="{'active':accountPage == '二级密码'}" v-on:click="info('二级密码')">二级密码</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" v-bind:class="{'active':accountPage == '锁仓'}" v-on:click="info('锁仓')">锁仓</a>
          </li>
        </ul>
      </div>
    </div>
    <div class="row" style="margin-top:10px">
      <div class="card" style="width: 100%">
        <div class="card-body" v-if="this.accountPage=='账户信息'">
          <div class="row">
            <div class="col-md-3">a</div>
            <div class="col-md-9">
              <h2>基本信息</h2>
              总余额：<%= @user.balance %>
              <hr/>
              地址: <%= @user.address %>
              <hr/>
              二级密码: <%= @user.secondPublicKey %>
              <hr/>
              锁仓状态:
              <hr/>
              公钥:     <%= @user.publicKey %>
              <hr/>
              主密钥二维码:
              <hr/>
              你的地址二维码:
            </div>
          </div>
        </div>
        <div class="card-body" v-if="this.accountPage=='二级密码'">
          <div class="row">
            <h2>设置二级密码</h2>
            <%= if(@user.secondPublicKey == nil)do %>
              <form class="col-md-12" @submit.prevent="">
                <div class="form-group">
                  <label>输入二级密码</label>
                  <input type="password" class="form-control" placeholder="输入二级密码" v-model="secondPass.secondPass">
                </div>
                <div class="form-group">
                  <label>再次输入</label>
                  <input type="password" class="form-control" placeholder="再次输入"  v-model="secondPass.againSecondPass">
                </div>
                <h7>
                  请确定您已经安全保存了二级密码，一旦丢失，您在Asch系统中的财产将无法找回，设置二级密码需要5手续费
                </h7>
                <button class="btn btn-primary float-right" v-on:click="getSecondPass('<%= @user.username%>')">确认</button>
              </form>
            <% else %>
              <br /> 您已设置二级密码
            <% end%>
          </div>
        </div>
        <div class="card-body" v-if="this.accountPage=='锁仓'">
          <div class="row">
            <form class="col-md-12">
              <h2>设置锁仓信息</h2>
              <div class="form-group">
                <label>输入高度</label>
                <input type="number" class="form-control" placeholder="输入高度">
              </div>
              <div class="form-group">
                <label>输入二级密码</label>
                <input type="password" class="form-control" placeholder="输入二级密码">
              </div>
              <button class="btn btn-primary float-right">确认</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
<% end %>
<%= if(@page == "pay")do %>
  <div class="container cards">
    <div class="row" style="margin-top:10px">
      <div class="card" style="width: 100%">
          <form class="col-md-12" @submit.prevent="">
            <h2>转账</h2>
            <p v-if="paySuccess === true" class="bg-success">{{payInfo}}</p>
            <p v-if="paySuccess === false" class="bg-warning">{{payInfo}}</p>
            <div class="form-group">
              <label>发送者：</label>
              <input type="text" class="form-control" placeholder="<%= @user.publicKey%>" readonly="readonly">
            </div>
            <div class="form-group">
              <label>接受者：</label>
                <select class="form-control" v-model="pay.recipientId">
                  <option v-for="value in publicKeys">{{value}}</option>
                </select>
            </div>
            <%= if(@user.secondPublicKey != nil)do %>
              <div class="form-group">
                <label>二级密码：</label>
                <input type="text" class="form-control" v-model="secondPassword">
              </div>
            <%end%>
            <div class="form-group">
              <label>金额：</label>
              <input type="number" class="form-control" placeholder="" v-model="pay.amount" v-bind:class="{'border-danger': pay.amount < 0}">
            </div>
            <div class="form-group">
              <label>费用：</label>
              <input type="number" class="form-control" readonly="readonly" placeholder="0.1">
            </div>
            <div class="form-group">
              <label>备注：</label>
              <input type="text" class="form-control" readonly="readonly" v-model="pay.message">
            </div>
            <button class="btn btn-primary float-right" v-on:click="getPays('<%= @user.publicKey%>')">确认</button>
          </form>
      </div>
    </div>
  </div>
<% end%>
<script>
  $(document).ready(function() {
    // 将jquery的ajax加入到Vue对象中,vue对象里的this.$ajax就相当于是jquery的$.ajax
    Vue.prototype.$ajax = $.ajax;
    const BASE_URL = '/block/api';
    // console.log(Vue)
    // 整个页面就是一个Vue对象,将所有属性都放到data里,将所有function都放到methods里
    const common = new Vue({
      el: '#page',
      created: function() {
        this.getTransactions()
        this.getPublicKey()
      },
      data: {
        type : 'index',
        items: [],
        currentTime: new Date().toLocaleString(),
        username: '',
        transactions: [],
        accountPage: '账户信息',
        pay: {
          publicKey: '', amount: 0, recipientId: '', message: ''
        },
        secondPass: {
          secondPass: '', againSecondPass: ''
        },
        paySuccess: '',
        payInfo: '',
        secondPublicKey: '',
        publicKeys: [],
        secondPassword: '',
        accoutnInfo: '',
        getTransactionById: {},
        getAccountByPublicKey: {},
        getAccountByAddress: {}
      },
      methods: {
        getTransactions: function() {
          this.$ajax({
            type: 'GET',
            url: BASE_URL + '/getTransactions',
            dataType: 'json',
            success: (res)=> {
              this.transactions = res.data
            },
            error: (err)=> {
              this.items = ['登录失败']
              console.log(err);
            }
          });
        },
        info: function(value) {
          this.accountPage = value
          switch (value) {
            case '账户信息':
              break;
            case '二级密码':
            break;
            case '锁仓':
            break;
            default:
              break;
          }
        },
        getPays: function (value) {
          if (this.secondPassword !== '') {
            this.pay.secondPassword= this.secondPassword
          }
          this.pay.publicKey= value
          this.$ajax({
            type: 'PUT',
            url: BASE_URL + '/addTransactions',
            data: this.pay,
            dataType: 'json',
            success: (res)=> {
              this.paySuccess = res.success
              this.payInfo = res.info
            },
            error: (err)=> {
              this.items = ['交易失败']
              console.log(err);
            }
          });
        },
        getSecondPass: function (username) {
          if (this.secondPass.secondPass === this.secondPass.againSecondPass && this.secondPass.secondPass !== '') {
            this.$ajax({
              type: 'put',
              url: BASE_URL + '/addSignature',
              data: {username: username, password: this.secondPass.secondPass},
              // data: {"data": new Date().toLocaleString()},
              dataType: 'json',
              success: (res)=> {
                // this.items = res.result
                if (res.success === true) {
                  this.items = ['二级密码创建成功']
                  location.reload();
                }
              },
              error: (err)=> {
                this.items = ['创建区块失败']
                console.log(err);
              }
            });
          } else {
            this.items = ['两次密码输入不一致']
          }
        },
        getPublicKey: function () {
          this.$ajax({
            type: 'GET',
            url: BASE_URL + '/getAccountsPublicKey',
            dataType: 'json',
            success: (res)=> {
              this.publicKeys = res.publicKeys
            },
            error: (err)=> {
              this.items = ['创建区块失败']
              console.log(err);
            }
          });
        },
        accountID: function (value) {
          this.$ajax({
            type: 'GET',
            url: BASE_URL + `/getTransaction?id=${value}`,
            dataType: 'json',
            success: (res)=> {
              console.log(res)
              this.accoutnInfo = 'id'
              const { signature, signSignature, senderId, recipientId, asset, args, ...c } = res.data;
              this.getTransactionById = c
            },
            error: (err)=> {
              this.items = ['创建区块失败']
              console.log(err);
            }
          });
        },
        accountSenderPublicKey: function (value) {
          this.$ajax({
            type: 'GET',
            url: BASE_URL + `/getAccountByPublicKey?publicKey=${value}`,
            dataType: 'json',
            success: (res)=> {
              this.accoutnInfo = 'PublicKey'
              let { username, u_username, u_secondSignature, u_nameexist, u_multisignatures, u_multimin, u_multilifetime, u_isDelegate, u_delegates, u_balance, secondSignature, secondPublicKey, rewards, rate, producedblocks, nameexist, multisignatures, multimin, multilifetime, missedblocks, lockHeight, isDelegate, index, fees, delegates, blockId, ...c } = res.account;
              this.getAccountByPublicKey = c
            },
            error: (err)=> {
              this.items = ['创建区块失败']
              console.log(err);
            }
          });
        },
        accountRecipientId: function (value) {
          this.$ajax({
            type: 'GET',
            url: BASE_URL + `/getAccountByPublicKey?publicKey=${value}`,
            dataType: 'json',
            success: (res)=> {
              this.accoutnInfo = 'RecipientId'
              let { username, u_username, u_secondSignature, u_nameexist, u_multisignatures, u_multimin, u_multilifetime, u_isDelegate, u_delegates, u_balance, secondSignature, secondPublicKey, rewards, rate, producedblocks, nameexist, multisignatures, multimin, multilifetime, missedblocks, lockHeight, isDelegate, index, fees, delegates, blockId, ...c } = res.account;
              this.getAccountByAddress = c
            },
            error: (err)=> {
              this.items = ['创建区块失败']
              console.log(err);
            }
          });
        }
      }  // vue-methods
    })  // new-Vue
  });  // jquery-ready
</script>
